version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:16-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
      POSTGRES_DB: RabbitMQ
    ports:
      - '15432:5432'
    volumes:
      - ./postgres-rabbitmq:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    image: rabbitmqapi:dev
    container_name: RabbitMQ.API
    build:
      context: .
      dockerfile: RabbitMQ.API/Dockerfile
    ports:
      - '8080:8080'
    environment:
      RABBITMQ_HOSTNAME: rabbitmq
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
      ASPNETCORE_ENVIRONMENT: Development
      RABBITMQ_PORT: 5672
      ConnectionStrings__DefaultConnection: 'Server=db;Database=RabbitMQ;User Id=postgres;Password=e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855;TrustServerCertificate=True;'
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    restart: unless-stopped
